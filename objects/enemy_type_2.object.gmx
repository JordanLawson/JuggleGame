<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>enemy1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

//Basic Varibles
faceRight=true;
gravity=0.5;
hold_x=self.x;
hold_y=self.y;
current_weapon=-1;
stunned=0;
stun_max=45;
go_right=false;
go_left=false;
jump=false;
shoot=false;
toss=false;

//A.I. Setup
alerted=false;
target=-1;
keep_dist=5;
reloading=false;
move=false;
chase_speed=3.5;

//
current_weapon=instance_create(x,y,knife);
current_weapon.owner=self;
current_weapon.active=true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>108</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_friction</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0.2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(target_counter))
{
 target_counter.count --;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Basic Functions</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check health
if(life&lt;=0)
{
 toss=true;
  if((current_weapon!=-1) and toss)
{
 toss=false;
 temp_current_weapon=current_weapon;
 current_weapon=-1;
 (temp_current_weapon).active=false;
 (temp_current_weapon).speed=7;
 (temp_current_weapon).gravity=1;
 (temp_current_weapon).wait_count=0;
 (temp_current_weapon).tossed=true;
 (temp_current_weapon).direction=90;
}
 instance_destroy(self);
}


//Jumping
if( jump and !place_free(x,y+1))
{
 vspeed = -8;
}


//facing correct direction
if(faceRight)
{
 if place_free(x+25,y)
 {
  hold_x=x+25;
 }
 else
 {
  hold_x=x;
 }
}
else
{
 if place_free(x-25,y)
 {
  hold_x=x-25;
 }
 else
 {
  hold_x=x;
 }
} 
hold_y=y;

//Gravity
if place_free(x,y+1+vspeed)
{
 gravity = 0.5;
}
else
{
 gravity = 0;
}

toss_weapon();


//slopes
if
(collision_line(x-17,y+15,x+16,y+15,slope_parent,true,true)!=noone)
{
 gravity=0;
}
//right slope
if((collision_ellipse(x-16,y+10,x+16,y+22,right_slope,true,true)!=noone))
{
 if keyboard_check(vk_right)//going up
 {
  y-=5;
 }
}

//left slope
else if((collision_ellipse(x-16,y+10,x+16,y+22,left_slope,true,true)!=noone))
{
 if(keyboard_check(vk_left))//going up
 {
  y-=5;
 }
}
//end slopes

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>A.I.</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(alerted)
{
 //facing
 if(target.x&gt;x){faceRight=true;}
 else if(target.x&lt;x){faceRight=false;}
 //==

 
 //check weapon
 if (current_weapon==-1) and (speed==0)
 {
  current_weapon=instance_create(x,y,knife);
  current_weapon.owner=self;
  current_weapon.active=true;
 }
  
  
 //motion
 if(current_weapon!=-1)
 {
  if(target.x&gt;x+keep_dist)
  {
   move=true;
   x+=chase_speed;
  }
  else if(target.x&lt;x-keep_dist)
  {
   move=true;
   x-=chase_speed;
  }
  else
  {
   move=false;
  }
 }
 else
 {
  if(faceRight)
  {
   direction=135;
   speed=17;
  }
  else
  {
   direction=45;
   speed=17;
  }
 }
 //==
  
}//end if alerted







else//if not alerted
{
 alerted=true;
 target=Character;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ladder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//vspeed=0;
if(keyboard_check(vk_up))
{
 y-=2;
}
else if(keyboard_check(vk_down))
{
 y+=2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="block_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,8);
vspeed = 0;
y = ceil(y);
if(!place_free(x,y))
{
 y -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_color(c_black)
draw_text(x-5,y-27,string(life))

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
